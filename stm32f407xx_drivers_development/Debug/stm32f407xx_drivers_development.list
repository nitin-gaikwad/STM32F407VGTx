
stm32f407xx_drivers_development.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000067c  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000824  0800082c  0001082c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000824  08000824  0001082c  2**0
                  CONTENTS
  4 .ARM          00000000  08000824  08000824  0001082c  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000824  0800082c  0001082c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000824  08000824  00010824  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000828  08000828  00010828  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  0001082c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  0800082c  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  0800082c  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 0000002a  00000000  00000000  0001082c  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000a50  00000000  00000000  00010856  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 0000025d  00000000  00000000  000112a6  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 000000c0  00000000  00000000  00011508  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000098  00000000  00000000  000115c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000014e  00000000  00000000  00011660  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00000e57  00000000  00000000  000117ae  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    00005e8d  00000000  00000000  00012605  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  00018492  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000024c  00000000  00000000  000184e4  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	0800080c 	.word	0x0800080c

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	0800080c 	.word	0x0800080c

080001e8 <GPIO_PeriClockControl>:
 * @brief Peripheral Clock Control for GPIO
 * @param  *GPIOx 	: GPIO Port Base address
 * @param  EnorDi   :  Enable or disable clock of given PORT
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0
 80001ee:	6078      	str	r0, [r7, #4]
 80001f0:	460b      	mov	r3, r1
 80001f2:	70fb      	strb	r3, [r7, #3]

	if(EnorDi == ENABLE )
 80001f4:	78fb      	ldrb	r3, [r7, #3]
 80001f6:	2b01      	cmp	r3, #1
 80001f8:	d162      	bne.n	80002c0 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a64      	ldr	r2, [pc, #400]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d106      	bne.n	8000210 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000202:	4b64      	ldr	r3, [pc, #400]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000204:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000206:	4a63      	ldr	r2, [pc, #396]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000208:	f043 0301 	orr.w	r3, r3, #1
 800020c:	6313      	str	r3, [r2, #48]	; 0x30
				}else if(pGPIOx == GPIOI)
				{
					GPIOI_PCLK_DI();
				}
	}
}
 800020e:	e0b9      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOB)
 8000210:	687b      	ldr	r3, [r7, #4]
 8000212:	4a61      	ldr	r2, [pc, #388]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 8000214:	4293      	cmp	r3, r2
 8000216:	d106      	bne.n	8000226 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000218:	4b5e      	ldr	r3, [pc, #376]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800021a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800021c:	4a5d      	ldr	r2, [pc, #372]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800021e:	f043 0302 	orr.w	r3, r3, #2
 8000222:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000224:	e0ae      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOC)
 8000226:	687b      	ldr	r3, [r7, #4]
 8000228:	4a5c      	ldr	r2, [pc, #368]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 800022a:	4293      	cmp	r3, r2
 800022c:	d106      	bne.n	800023c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800022e:	4b59      	ldr	r3, [pc, #356]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000230:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000232:	4a58      	ldr	r2, [pc, #352]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000234:	f043 0304 	orr.w	r3, r3, #4
 8000238:	6313      	str	r3, [r2, #48]	; 0x30
}
 800023a:	e0a3      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOD)
 800023c:	687b      	ldr	r3, [r7, #4]
 800023e:	4a58      	ldr	r2, [pc, #352]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 8000240:	4293      	cmp	r3, r2
 8000242:	d106      	bne.n	8000252 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000244:	4b53      	ldr	r3, [pc, #332]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000246:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000248:	4a52      	ldr	r2, [pc, #328]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800024a:	f043 0308 	orr.w	r3, r3, #8
 800024e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000250:	e098      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOE)
 8000252:	687b      	ldr	r3, [r7, #4]
 8000254:	4a53      	ldr	r2, [pc, #332]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 8000256:	4293      	cmp	r3, r2
 8000258:	d106      	bne.n	8000268 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800025a:	4b4e      	ldr	r3, [pc, #312]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800025c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800025e:	4a4d      	ldr	r2, [pc, #308]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000260:	f043 0310 	orr.w	r3, r3, #16
 8000264:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000266:	e08d      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOF)
 8000268:	687b      	ldr	r3, [r7, #4]
 800026a:	4a4f      	ldr	r2, [pc, #316]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 800026c:	4293      	cmp	r3, r2
 800026e:	d106      	bne.n	800027e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000270:	4b48      	ldr	r3, [pc, #288]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000272:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000274:	4a47      	ldr	r2, [pc, #284]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000276:	f043 0320 	orr.w	r3, r3, #32
 800027a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800027c:	e082      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOG)
 800027e:	687b      	ldr	r3, [r7, #4]
 8000280:	4a4a      	ldr	r2, [pc, #296]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000282:	4293      	cmp	r3, r2
 8000284:	d106      	bne.n	8000294 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000286:	4b43      	ldr	r3, [pc, #268]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000288:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800028a:	4a42      	ldr	r2, [pc, #264]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800028c:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000290:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000292:	e077      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOH)
 8000294:	687b      	ldr	r3, [r7, #4]
 8000296:	4a46      	ldr	r2, [pc, #280]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 8000298:	4293      	cmp	r3, r2
 800029a:	d106      	bne.n	80002aa <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800029c:	4b3d      	ldr	r3, [pc, #244]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800029e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002a0:	4a3c      	ldr	r2, [pc, #240]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002a2:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80002a6:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002a8:	e06c      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOI)
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	4a41      	ldr	r2, [pc, #260]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 80002ae:	4293      	cmp	r3, r2
 80002b0:	d168      	bne.n	8000384 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80002b2:	4b38      	ldr	r3, [pc, #224]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002b4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002b6:	4a37      	ldr	r2, [pc, #220]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002b8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80002bc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002be:	e061      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80002c0:	687b      	ldr	r3, [r7, #4]
 80002c2:	4a33      	ldr	r2, [pc, #204]	; (8000390 <GPIO_PeriClockControl+0x1a8>)
 80002c4:	4293      	cmp	r3, r2
 80002c6:	d106      	bne.n	80002d6 <GPIO_PeriClockControl+0xee>
					GPIOA_PCLK_DI();
 80002c8:	4b32      	ldr	r3, [pc, #200]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002ca:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002cc:	4a31      	ldr	r2, [pc, #196]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002ce:	f023 0301 	bic.w	r3, r3, #1
 80002d2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002d4:	e056      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if(pGPIOx == GPIOB)
 80002d6:	687b      	ldr	r3, [r7, #4]
 80002d8:	4a2f      	ldr	r2, [pc, #188]	; (8000398 <GPIO_PeriClockControl+0x1b0>)
 80002da:	4293      	cmp	r3, r2
 80002dc:	d106      	bne.n	80002ec <GPIO_PeriClockControl+0x104>
					GPIOB_PCLK_DI();
 80002de:	4b2d      	ldr	r3, [pc, #180]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002e0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002e2:	4a2c      	ldr	r2, [pc, #176]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002e4:	f023 0302 	bic.w	r3, r3, #2
 80002e8:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002ea:	e04b      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if(pGPIOx == GPIOC)
 80002ec:	687b      	ldr	r3, [r7, #4]
 80002ee:	4a2b      	ldr	r2, [pc, #172]	; (800039c <GPIO_PeriClockControl+0x1b4>)
 80002f0:	4293      	cmp	r3, r2
 80002f2:	d106      	bne.n	8000302 <GPIO_PeriClockControl+0x11a>
					GPIOC_PCLK_DI();
 80002f4:	4b27      	ldr	r3, [pc, #156]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002f6:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002f8:	4a26      	ldr	r2, [pc, #152]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 80002fa:	f023 0304 	bic.w	r3, r3, #4
 80002fe:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000300:	e040      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if(pGPIOx == GPIOD)
 8000302:	687b      	ldr	r3, [r7, #4]
 8000304:	4a26      	ldr	r2, [pc, #152]	; (80003a0 <GPIO_PeriClockControl+0x1b8>)
 8000306:	4293      	cmp	r3, r2
 8000308:	d106      	bne.n	8000318 <GPIO_PeriClockControl+0x130>
					GPIOD_PCLK_DI();
 800030a:	4b22      	ldr	r3, [pc, #136]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800030c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800030e:	4a21      	ldr	r2, [pc, #132]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000310:	f023 0308 	bic.w	r3, r3, #8
 8000314:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000316:	e035      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if(pGPIOx == GPIOE)
 8000318:	687b      	ldr	r3, [r7, #4]
 800031a:	4a22      	ldr	r2, [pc, #136]	; (80003a4 <GPIO_PeriClockControl+0x1bc>)
 800031c:	4293      	cmp	r3, r2
 800031e:	d106      	bne.n	800032e <GPIO_PeriClockControl+0x146>
					GPIOE_PCLK_DI();
 8000320:	4b1c      	ldr	r3, [pc, #112]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000322:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000324:	4a1b      	ldr	r2, [pc, #108]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000326:	f023 0310 	bic.w	r3, r3, #16
 800032a:	6313      	str	r3, [r2, #48]	; 0x30
}
 800032c:	e02a      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if(pGPIOx == GPIOF)
 800032e:	687b      	ldr	r3, [r7, #4]
 8000330:	4a1d      	ldr	r2, [pc, #116]	; (80003a8 <GPIO_PeriClockControl+0x1c0>)
 8000332:	4293      	cmp	r3, r2
 8000334:	d106      	bne.n	8000344 <GPIO_PeriClockControl+0x15c>
					GPIOF_PCLK_DI();
 8000336:	4b17      	ldr	r3, [pc, #92]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000338:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800033a:	4a16      	ldr	r2, [pc, #88]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800033c:	f023 0320 	bic.w	r3, r3, #32
 8000340:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000342:	e01f      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if(pGPIOx == GPIOG)
 8000344:	687b      	ldr	r3, [r7, #4]
 8000346:	4a19      	ldr	r2, [pc, #100]	; (80003ac <GPIO_PeriClockControl+0x1c4>)
 8000348:	4293      	cmp	r3, r2
 800034a:	d106      	bne.n	800035a <GPIO_PeriClockControl+0x172>
					GPIOG_PCLK_DI();
 800034c:	4b11      	ldr	r3, [pc, #68]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800034e:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000350:	4a10      	ldr	r2, [pc, #64]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000352:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8000356:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000358:	e014      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if(pGPIOx == GPIOH)
 800035a:	687b      	ldr	r3, [r7, #4]
 800035c:	4a14      	ldr	r2, [pc, #80]	; (80003b0 <GPIO_PeriClockControl+0x1c8>)
 800035e:	4293      	cmp	r3, r2
 8000360:	d106      	bne.n	8000370 <GPIO_PeriClockControl+0x188>
					GPIOH_PCLK_DI();
 8000362:	4b0c      	ldr	r3, [pc, #48]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000364:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000366:	4a0b      	ldr	r2, [pc, #44]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 8000368:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800036c:	6313      	str	r3, [r2, #48]	; 0x30
}
 800036e:	e009      	b.n	8000384 <GPIO_PeriClockControl+0x19c>
				}else if(pGPIOx == GPIOI)
 8000370:	687b      	ldr	r3, [r7, #4]
 8000372:	4a10      	ldr	r2, [pc, #64]	; (80003b4 <GPIO_PeriClockControl+0x1cc>)
 8000374:	4293      	cmp	r3, r2
 8000376:	d105      	bne.n	8000384 <GPIO_PeriClockControl+0x19c>
					GPIOI_PCLK_DI();
 8000378:	4b06      	ldr	r3, [pc, #24]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800037a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800037c:	4a05      	ldr	r2, [pc, #20]	; (8000394 <GPIO_PeriClockControl+0x1ac>)
 800037e:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8000382:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000384:	bf00      	nop
 8000386:	370c      	adds	r7, #12
 8000388:	46bd      	mov	sp, r7
 800038a:	bc80      	pop	{r7}
 800038c:	4770      	bx	lr
 800038e:	bf00      	nop
 8000390:	40020000 	.word	0x40020000
 8000394:	40023800 	.word	0x40023800
 8000398:	40020400 	.word	0x40020400
 800039c:	40020800 	.word	0x40020800
 80003a0:	40020c00 	.word	0x40020c00
 80003a4:	40021000 	.word	0x40021000
 80003a8:	40021400 	.word	0x40021400
 80003ac:	40021800 	.word	0x40021800
 80003b0:	40021c00 	.word	0x40021c00
 80003b4:	40022000 	.word	0x40022000

080003b8 <GPIO_Init>:
	* @brief  Initializes the gpio pin
	* @param  *GPIOHandle : GPIO Port Handle
	* @retval None
	*/
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80003b8:	b480      	push	{r7}
 80003ba:	b087      	sub	sp, #28
 80003bc:	af00      	add	r7, sp, #0
 80003be:	6078      	str	r0, [r7, #4]
	uint32_t temp;
// 1. configure the mode of GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	795b      	ldrb	r3, [r3, #5]
 80003c4:	2b03      	cmp	r3, #3
 80003c6:	d81f      	bhi.n	8000408 <GPIO_Init+0x50>
	{
		temp=pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2* pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80003c8:	687b      	ldr	r3, [r7, #4]
 80003ca:	795b      	ldrb	r3, [r3, #5]
 80003cc:	461a      	mov	r2, r3
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	791b      	ldrb	r3, [r3, #4]
 80003d2:	005b      	lsls	r3, r3, #1
 80003d4:	fa02 f303 	lsl.w	r3, r2, r3
 80003d8:	613b      	str	r3, [r7, #16]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber); // clearing
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	681b      	ldr	r3, [r3, #0]
 80003de:	681a      	ldr	r2, [r3, #0]
 80003e0:	687b      	ldr	r3, [r7, #4]
 80003e2:	791b      	ldrb	r3, [r3, #4]
 80003e4:	4619      	mov	r1, r3
 80003e6:	2303      	movs	r3, #3
 80003e8:	408b      	lsls	r3, r1
 80003ea:	43db      	mvns	r3, r3
 80003ec:	4619      	mov	r1, r3
 80003ee:	687b      	ldr	r3, [r7, #4]
 80003f0:	681b      	ldr	r3, [r3, #0]
 80003f2:	400a      	ands	r2, r1
 80003f4:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp; // setting
 80003f6:	687b      	ldr	r3, [r7, #4]
 80003f8:	681b      	ldr	r3, [r3, #0]
 80003fa:	6819      	ldr	r1, [r3, #0]
 80003fc:	687b      	ldr	r3, [r7, #4]
 80003fe:	681b      	ldr	r3, [r3, #0]
 8000400:	693a      	ldr	r2, [r7, #16]
 8000402:	430a      	orrs	r2, r1
 8000404:	601a      	str	r2, [r3, #0]
 8000406:	e0c2      	b.n	800058e <GPIO_Init+0x1d6>

	}
	else
	{
		// configuring the interrupt
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_FT)
 8000408:	687b      	ldr	r3, [r7, #4]
 800040a:	795b      	ldrb	r3, [r3, #5]
 800040c:	2b04      	cmp	r3, #4
 800040e:	d817      	bhi.n	8000440 <GPIO_Init+0x88>
		{
			//1. configure the Falling edge Trigger Selection register
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000410:	4b47      	ldr	r3, [pc, #284]	; (8000530 <GPIO_Init+0x178>)
 8000412:	68db      	ldr	r3, [r3, #12]
 8000414:	687a      	ldr	r2, [r7, #4]
 8000416:	7912      	ldrb	r2, [r2, #4]
 8000418:	4611      	mov	r1, r2
 800041a:	2201      	movs	r2, #1
 800041c:	408a      	lsls	r2, r1
 800041e:	4611      	mov	r1, r2
 8000420:	4a43      	ldr	r2, [pc, #268]	; (8000530 <GPIO_Init+0x178>)
 8000422:	430b      	orrs	r3, r1
 8000424:	60d3      	str	r3, [r2, #12]
			// CLEAR THE RTSR  BIT
			EXTI->RTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000426:	4b42      	ldr	r3, [pc, #264]	; (8000530 <GPIO_Init+0x178>)
 8000428:	689b      	ldr	r3, [r3, #8]
 800042a:	687a      	ldr	r2, [r7, #4]
 800042c:	7912      	ldrb	r2, [r2, #4]
 800042e:	4611      	mov	r1, r2
 8000430:	2201      	movs	r2, #1
 8000432:	408a      	lsls	r2, r1
 8000434:	43d2      	mvns	r2, r2
 8000436:	4611      	mov	r1, r2
 8000438:	4a3d      	ldr	r2, [pc, #244]	; (8000530 <GPIO_Init+0x178>)
 800043a:	400b      	ands	r3, r1
 800043c:	6093      	str	r3, [r2, #8]
 800043e:	e035      	b.n	80004ac <GPIO_Init+0xf4>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RT)
 8000440:	687b      	ldr	r3, [r7, #4]
 8000442:	795b      	ldrb	r3, [r3, #5]
 8000444:	2b05      	cmp	r3, #5
 8000446:	d817      	bhi.n	8000478 <GPIO_Init+0xc0>
		{
			//1. configure the Rising edge Trigger Selection register
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000448:	4b39      	ldr	r3, [pc, #228]	; (8000530 <GPIO_Init+0x178>)
 800044a:	689b      	ldr	r3, [r3, #8]
 800044c:	687a      	ldr	r2, [r7, #4]
 800044e:	7912      	ldrb	r2, [r2, #4]
 8000450:	4611      	mov	r1, r2
 8000452:	2201      	movs	r2, #1
 8000454:	408a      	lsls	r2, r1
 8000456:	4611      	mov	r1, r2
 8000458:	4a35      	ldr	r2, [pc, #212]	; (8000530 <GPIO_Init+0x178>)
 800045a:	430b      	orrs	r3, r1
 800045c:	6093      	str	r3, [r2, #8]
			// CLEAR THE FTSR  BIT
			EXTI->FTSR &= ~(1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800045e:	4b34      	ldr	r3, [pc, #208]	; (8000530 <GPIO_Init+0x178>)
 8000460:	68db      	ldr	r3, [r3, #12]
 8000462:	687a      	ldr	r2, [r7, #4]
 8000464:	7912      	ldrb	r2, [r2, #4]
 8000466:	4611      	mov	r1, r2
 8000468:	2201      	movs	r2, #1
 800046a:	408a      	lsls	r2, r1
 800046c:	43d2      	mvns	r2, r2
 800046e:	4611      	mov	r1, r2
 8000470:	4a2f      	ldr	r2, [pc, #188]	; (8000530 <GPIO_Init+0x178>)
 8000472:	400b      	ands	r3, r1
 8000474:	60d3      	str	r3, [r2, #12]
 8000476:	e019      	b.n	80004ac <GPIO_Init+0xf4>
		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_IT_RFT)
 8000478:	687b      	ldr	r3, [r7, #4]
 800047a:	795b      	ldrb	r3, [r3, #5]
 800047c:	2b06      	cmp	r3, #6
 800047e:	d815      	bhi.n	80004ac <GPIO_Init+0xf4>
		{
			//1. configure the both Rising and Falling Trigger Selection register
			EXTI->FTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000480:	4b2b      	ldr	r3, [pc, #172]	; (8000530 <GPIO_Init+0x178>)
 8000482:	68db      	ldr	r3, [r3, #12]
 8000484:	687a      	ldr	r2, [r7, #4]
 8000486:	7912      	ldrb	r2, [r2, #4]
 8000488:	4611      	mov	r1, r2
 800048a:	2201      	movs	r2, #1
 800048c:	408a      	lsls	r2, r1
 800048e:	4611      	mov	r1, r2
 8000490:	4a27      	ldr	r2, [pc, #156]	; (8000530 <GPIO_Init+0x178>)
 8000492:	430b      	orrs	r3, r1
 8000494:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000496:	4b26      	ldr	r3, [pc, #152]	; (8000530 <GPIO_Init+0x178>)
 8000498:	689b      	ldr	r3, [r3, #8]
 800049a:	687a      	ldr	r2, [r7, #4]
 800049c:	7912      	ldrb	r2, [r2, #4]
 800049e:	4611      	mov	r1, r2
 80004a0:	2201      	movs	r2, #1
 80004a2:	408a      	lsls	r2, r1
 80004a4:	4611      	mov	r1, r2
 80004a6:	4a22      	ldr	r2, [pc, #136]	; (8000530 <GPIO_Init+0x178>)
 80004a8:	430b      	orrs	r3, r1
 80004aa:	6093      	str	r3, [r2, #8]

		}

		//2.Configure the GPIO port Selection in SYSCFG_EXTICR
		uint8_t temp1= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/4;
 80004ac:	687b      	ldr	r3, [r7, #4]
 80004ae:	791b      	ldrb	r3, [r3, #4]
 80004b0:	089b      	lsrs	r3, r3, #2
 80004b2:	75fb      	strb	r3, [r7, #23]
		uint8_t temp2= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%4;
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	791b      	ldrb	r3, [r3, #4]
 80004b8:	f003 0303 	and.w	r3, r3, #3
 80004bc:	75bb      	strb	r3, [r7, #22]
		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80004be:	687b      	ldr	r3, [r7, #4]
 80004c0:	681b      	ldr	r3, [r3, #0]
 80004c2:	4a1c      	ldr	r2, [pc, #112]	; (8000534 <GPIO_Init+0x17c>)
 80004c4:	4293      	cmp	r3, r2
 80004c6:	d045      	beq.n	8000554 <GPIO_Init+0x19c>
 80004c8:	687b      	ldr	r3, [r7, #4]
 80004ca:	681b      	ldr	r3, [r3, #0]
 80004cc:	4a1a      	ldr	r2, [pc, #104]	; (8000538 <GPIO_Init+0x180>)
 80004ce:	4293      	cmp	r3, r2
 80004d0:	d02b      	beq.n	800052a <GPIO_Init+0x172>
 80004d2:	687b      	ldr	r3, [r7, #4]
 80004d4:	681b      	ldr	r3, [r3, #0]
 80004d6:	4a19      	ldr	r2, [pc, #100]	; (800053c <GPIO_Init+0x184>)
 80004d8:	4293      	cmp	r3, r2
 80004da:	d024      	beq.n	8000526 <GPIO_Init+0x16e>
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	4a17      	ldr	r2, [pc, #92]	; (8000540 <GPIO_Init+0x188>)
 80004e2:	4293      	cmp	r3, r2
 80004e4:	d01d      	beq.n	8000522 <GPIO_Init+0x16a>
 80004e6:	687b      	ldr	r3, [r7, #4]
 80004e8:	681b      	ldr	r3, [r3, #0]
 80004ea:	4a16      	ldr	r2, [pc, #88]	; (8000544 <GPIO_Init+0x18c>)
 80004ec:	4293      	cmp	r3, r2
 80004ee:	d016      	beq.n	800051e <GPIO_Init+0x166>
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	681b      	ldr	r3, [r3, #0]
 80004f4:	4a14      	ldr	r2, [pc, #80]	; (8000548 <GPIO_Init+0x190>)
 80004f6:	4293      	cmp	r3, r2
 80004f8:	d00f      	beq.n	800051a <GPIO_Init+0x162>
 80004fa:	687b      	ldr	r3, [r7, #4]
 80004fc:	681b      	ldr	r3, [r3, #0]
 80004fe:	4a13      	ldr	r2, [pc, #76]	; (800054c <GPIO_Init+0x194>)
 8000500:	4293      	cmp	r3, r2
 8000502:	d008      	beq.n	8000516 <GPIO_Init+0x15e>
 8000504:	687b      	ldr	r3, [r7, #4]
 8000506:	681b      	ldr	r3, [r3, #0]
 8000508:	4a11      	ldr	r2, [pc, #68]	; (8000550 <GPIO_Init+0x198>)
 800050a:	4293      	cmp	r3, r2
 800050c:	d101      	bne.n	8000512 <GPIO_Init+0x15a>
 800050e:	2307      	movs	r3, #7
 8000510:	e021      	b.n	8000556 <GPIO_Init+0x19e>
 8000512:	2300      	movs	r3, #0
 8000514:	e01f      	b.n	8000556 <GPIO_Init+0x19e>
 8000516:	2306      	movs	r3, #6
 8000518:	e01d      	b.n	8000556 <GPIO_Init+0x19e>
 800051a:	2305      	movs	r3, #5
 800051c:	e01b      	b.n	8000556 <GPIO_Init+0x19e>
 800051e:	2304      	movs	r3, #4
 8000520:	e019      	b.n	8000556 <GPIO_Init+0x19e>
 8000522:	2303      	movs	r3, #3
 8000524:	e017      	b.n	8000556 <GPIO_Init+0x19e>
 8000526:	2302      	movs	r3, #2
 8000528:	e015      	b.n	8000556 <GPIO_Init+0x19e>
 800052a:	2301      	movs	r3, #1
 800052c:	e013      	b.n	8000556 <GPIO_Init+0x19e>
 800052e:	bf00      	nop
 8000530:	40013c00 	.word	0x40013c00
 8000534:	40020000 	.word	0x40020000
 8000538:	40020400 	.word	0x40020400
 800053c:	40020800 	.word	0x40020800
 8000540:	40020c00 	.word	0x40020c00
 8000544:	40021000 	.word	0x40021000
 8000548:	40021400 	.word	0x40021400
 800054c:	40021800 	.word	0x40021800
 8000550:	40021c00 	.word	0x40021c00
 8000554:	2300      	movs	r3, #0
 8000556:	757b      	strb	r3, [r7, #21]
		SYSCFG_PCLK_EN();
 8000558:	4b5d      	ldr	r3, [pc, #372]	; (80006d0 <GPIO_Init+0x318>)
 800055a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800055c:	4a5c      	ldr	r2, [pc, #368]	; (80006d0 <GPIO_Init+0x318>)
 800055e:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8000562:	6453      	str	r3, [r2, #68]	; 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 * 4);
 8000564:	7d7a      	ldrb	r2, [r7, #21]
 8000566:	7dbb      	ldrb	r3, [r7, #22]
 8000568:	009b      	lsls	r3, r3, #2
 800056a:	fa02 f103 	lsl.w	r1, r2, r3
 800056e:	4a59      	ldr	r2, [pc, #356]	; (80006d4 <GPIO_Init+0x31c>)
 8000570:	7dfb      	ldrb	r3, [r7, #23]
 8000572:	3302      	adds	r3, #2
 8000574:	f842 1023 	str.w	r1, [r2, r3, lsl #2]
		//3. Enable the EXTI Interrupt delivery using IMR
		EXTI->IMR |= (1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000578:	4b57      	ldr	r3, [pc, #348]	; (80006d8 <GPIO_Init+0x320>)
 800057a:	681b      	ldr	r3, [r3, #0]
 800057c:	687a      	ldr	r2, [r7, #4]
 800057e:	7912      	ldrb	r2, [r2, #4]
 8000580:	4611      	mov	r1, r2
 8000582:	2201      	movs	r2, #1
 8000584:	408a      	lsls	r2, r1
 8000586:	4611      	mov	r1, r2
 8000588:	4a53      	ldr	r2, [pc, #332]	; (80006d8 <GPIO_Init+0x320>)
 800058a:	430b      	orrs	r3, r1
 800058c:	6013      	str	r3, [r2, #0]
	}
	temp=0;
 800058e:	2300      	movs	r3, #0
 8000590:	613b      	str	r3, [r7, #16]
// 2. configure the speed of GPIO pin
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed);
 8000592:	687b      	ldr	r3, [r7, #4]
 8000594:	799b      	ldrb	r3, [r3, #6]
 8000596:	461a      	mov	r2, r3
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	799b      	ldrb	r3, [r3, #6]
 800059c:	005b      	lsls	r3, r3, #1
 800059e:	fa02 f303 	lsl.w	r3, r2, r3
 80005a2:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005a4:	687b      	ldr	r3, [r7, #4]
 80005a6:	681b      	ldr	r3, [r3, #0]
 80005a8:	689a      	ldr	r2, [r3, #8]
 80005aa:	687b      	ldr	r3, [r7, #4]
 80005ac:	791b      	ldrb	r3, [r3, #4]
 80005ae:	4619      	mov	r1, r3
 80005b0:	2303      	movs	r3, #3
 80005b2:	408b      	lsls	r3, r1
 80005b4:	43db      	mvns	r3, r3
 80005b6:	4619      	mov	r1, r3
 80005b8:	687b      	ldr	r3, [r7, #4]
 80005ba:	681b      	ldr	r3, [r3, #0]
 80005bc:	400a      	ands	r2, r1
 80005be:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 80005c0:	687b      	ldr	r3, [r7, #4]
 80005c2:	681b      	ldr	r3, [r3, #0]
 80005c4:	6899      	ldr	r1, [r3, #8]
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	693a      	ldr	r2, [r7, #16]
 80005cc:	430a      	orrs	r2, r1
 80005ce:	609a      	str	r2, [r3, #8]

	temp=0;
 80005d0:	2300      	movs	r3, #0
 80005d2:	613b      	str	r3, [r7, #16]
// 3. configure the PULL UP PULL DOWN  setting
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl <<(2* pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl);
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	79db      	ldrb	r3, [r3, #7]
 80005d8:	461a      	mov	r2, r3
 80005da:	687b      	ldr	r3, [r7, #4]
 80005dc:	79db      	ldrb	r3, [r3, #7]
 80005de:	005b      	lsls	r3, r3, #1
 80005e0:	fa02 f303 	lsl.w	r3, r2, r3
 80005e4:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005e6:	687b      	ldr	r3, [r7, #4]
 80005e8:	681b      	ldr	r3, [r3, #0]
 80005ea:	68da      	ldr	r2, [r3, #12]
 80005ec:	687b      	ldr	r3, [r7, #4]
 80005ee:	791b      	ldrb	r3, [r3, #4]
 80005f0:	4619      	mov	r1, r3
 80005f2:	2303      	movs	r3, #3
 80005f4:	408b      	lsls	r3, r1
 80005f6:	43db      	mvns	r3, r3
 80005f8:	4619      	mov	r1, r3
 80005fa:	687b      	ldr	r3, [r7, #4]
 80005fc:	681b      	ldr	r3, [r3, #0]
 80005fe:	400a      	ands	r2, r1
 8000600:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |=temp;
 8000602:	687b      	ldr	r3, [r7, #4]
 8000604:	681b      	ldr	r3, [r3, #0]
 8000606:	68d9      	ldr	r1, [r3, #12]
 8000608:	687b      	ldr	r3, [r7, #4]
 800060a:	681b      	ldr	r3, [r3, #0]
 800060c:	693a      	ldr	r2, [r7, #16]
 800060e:	430a      	orrs	r2, r1
 8000610:	60da      	str	r2, [r3, #12]

	temp=0;
 8000612:	2300      	movs	r3, #0
 8000614:	613b      	str	r3, [r7, #16]
// 4. configure the output type
	temp= pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType <<(pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType);
 8000616:	687b      	ldr	r3, [r7, #4]
 8000618:	7a1b      	ldrb	r3, [r3, #8]
 800061a:	461a      	mov	r2, r3
 800061c:	687b      	ldr	r3, [r7, #4]
 800061e:	7a1b      	ldrb	r3, [r3, #8]
 8000620:	fa02 f303 	lsl.w	r3, r2, r3
 8000624:	613b      	str	r3, [r7, #16]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000626:	687b      	ldr	r3, [r7, #4]
 8000628:	681b      	ldr	r3, [r3, #0]
 800062a:	685a      	ldr	r2, [r3, #4]
 800062c:	687b      	ldr	r3, [r7, #4]
 800062e:	791b      	ldrb	r3, [r3, #4]
 8000630:	4619      	mov	r1, r3
 8000632:	2301      	movs	r3, #1
 8000634:	408b      	lsls	r3, r1
 8000636:	43db      	mvns	r3, r3
 8000638:	4619      	mov	r1, r3
 800063a:	687b      	ldr	r3, [r7, #4]
 800063c:	681b      	ldr	r3, [r3, #0]
 800063e:	400a      	ands	r2, r1
 8000640:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |=temp;
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	6859      	ldr	r1, [r3, #4]
 8000648:	687b      	ldr	r3, [r7, #4]
 800064a:	681b      	ldr	r3, [r3, #0]
 800064c:	693a      	ldr	r2, [r7, #16]
 800064e:	430a      	orrs	r2, r1
 8000650:	605a      	str	r2, [r3, #4]

	temp=0;
 8000652:	2300      	movs	r3, #0
 8000654:	613b      	str	r3, [r7, #16]
// 5. configure the alternate functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000656:	687b      	ldr	r3, [r7, #4]
 8000658:	795b      	ldrb	r3, [r3, #5]
 800065a:	2b02      	cmp	r3, #2
 800065c:	d132      	bne.n	80006c4 <GPIO_Init+0x30c>
	{
		uint32_t temp1,temp2;
		temp1= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 800065e:	687b      	ldr	r3, [r7, #4]
 8000660:	791b      	ldrb	r3, [r3, #4]
 8000662:	08db      	lsrs	r3, r3, #3
 8000664:	b2db      	uxtb	r3, r3
 8000666:	60fb      	str	r3, [r7, #12]
		temp2= pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 8000668:	687b      	ldr	r3, [r7, #4]
 800066a:	791b      	ldrb	r3, [r3, #4]
 800066c:	f003 0307 	and.w	r3, r3, #7
 8000670:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &=  ~(0xF << ( 4 * temp2 ) ); //clearing
 8000672:	687b      	ldr	r3, [r7, #4]
 8000674:	681b      	ldr	r3, [r3, #0]
 8000676:	68fa      	ldr	r2, [r7, #12]
 8000678:	3208      	adds	r2, #8
 800067a:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800067e:	68bb      	ldr	r3, [r7, #8]
 8000680:	009b      	lsls	r3, r3, #2
 8000682:	210f      	movs	r1, #15
 8000684:	fa01 f303 	lsl.w	r3, r1, r3
 8000688:	43db      	mvns	r3, r3
 800068a:	4619      	mov	r1, r3
 800068c:	687b      	ldr	r3, [r7, #4]
 800068e:	681b      	ldr	r3, [r3, #0]
 8000690:	4011      	ands	r1, r2
 8000692:	68fa      	ldr	r2, [r7, #12]
 8000694:	3208      	adds	r2, #8
 8000696:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 800069a:	687b      	ldr	r3, [r7, #4]
 800069c:	681b      	ldr	r3, [r3, #0]
 800069e:	68fa      	ldr	r2, [r7, #12]
 80006a0:	3208      	adds	r2, #8
 80006a2:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80006a6:	687b      	ldr	r3, [r7, #4]
 80006a8:	7a5b      	ldrb	r3, [r3, #9]
 80006aa:	4619      	mov	r1, r3
 80006ac:	68bb      	ldr	r3, [r7, #8]
 80006ae:	009b      	lsls	r3, r3, #2
 80006b0:	fa01 f303 	lsl.w	r3, r1, r3
 80006b4:	4619      	mov	r1, r3
 80006b6:	687b      	ldr	r3, [r7, #4]
 80006b8:	681b      	ldr	r3, [r3, #0]
 80006ba:	4311      	orrs	r1, r2
 80006bc:	68fa      	ldr	r2, [r7, #12]
 80006be:	3208      	adds	r2, #8
 80006c0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

	}
}
 80006c4:	bf00      	nop
 80006c6:	371c      	adds	r7, #28
 80006c8:	46bd      	mov	sp, r7
 80006ca:	bc80      	pop	{r7}
 80006cc:	4770      	bx	lr
 80006ce:	bf00      	nop
 80006d0:	40023800 	.word	0x40023800
 80006d4:	40013800 	.word	0x40013800
 80006d8:	40013c00 	.word	0x40013c00

080006dc <GPIO_ToggleOutputPin>:
	* @param  *pGPIOx : GPIO Port Base address
	* @param  PinNumber : GPIO pin number
	* @retval None
	*/
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 80006dc:	b480      	push	{r7}
 80006de:	b083      	sub	sp, #12
 80006e0:	af00      	add	r7, sp, #0
 80006e2:	6078      	str	r0, [r7, #4]
 80006e4:	460b      	mov	r3, r1
 80006e6:	70fb      	strb	r3, [r7, #3]

		pGPIOx->ODR ^= (1<< PinNumber);
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	695b      	ldr	r3, [r3, #20]
 80006ec:	78fa      	ldrb	r2, [r7, #3]
 80006ee:	2101      	movs	r1, #1
 80006f0:	fa01 f202 	lsl.w	r2, r1, r2
 80006f4:	405a      	eors	r2, r3
 80006f6:	687b      	ldr	r3, [r7, #4]
 80006f8:	615a      	str	r2, [r3, #20]
}
 80006fa:	bf00      	nop
 80006fc:	370c      	adds	r7, #12
 80006fe:	46bd      	mov	sp, r7
 8000700:	bc80      	pop	{r7}
 8000702:	4770      	bx	lr

08000704 <delay>:
#endif


#include"stm32f407xx.h"
void delay(void)
{
 8000704:	b480      	push	{r7}
 8000706:	b083      	sub	sp, #12
 8000708:	af00      	add	r7, sp, #0
	uint32_t i;
	for(i=0;i<500000;i++);
 800070a:	2300      	movs	r3, #0
 800070c:	607b      	str	r3, [r7, #4]
 800070e:	e002      	b.n	8000716 <delay+0x12>
 8000710:	687b      	ldr	r3, [r7, #4]
 8000712:	3301      	adds	r3, #1
 8000714:	607b      	str	r3, [r7, #4]
 8000716:	687b      	ldr	r3, [r7, #4]
 8000718:	4a04      	ldr	r2, [pc, #16]	; (800072c <delay+0x28>)
 800071a:	4293      	cmp	r3, r2
 800071c:	d9f8      	bls.n	8000710 <delay+0xc>
}
 800071e:	bf00      	nop
 8000720:	bf00      	nop
 8000722:	370c      	adds	r7, #12
 8000724:	46bd      	mov	sp, r7
 8000726:	bc80      	pop	{r7}
 8000728:	4770      	bx	lr
 800072a:	bf00      	nop
 800072c:	0007a11f 	.word	0x0007a11f

08000730 <main>:

int main(void)
{
 8000730:	b580      	push	{r7, lr}
 8000732:	b084      	sub	sp, #16
 8000734:	af00      	add	r7, sp, #0

	GPIO_Handle_t led;

	led.pGPIOx = GPIOD;
 8000736:	4b0d      	ldr	r3, [pc, #52]	; (800076c <main+0x3c>)
 8000738:	607b      	str	r3, [r7, #4]

	led.GPIO_PinConfig.GPIO_PinNumber		=	GPIO_PIN_NO_14;
 800073a:	230e      	movs	r3, #14
 800073c:	723b      	strb	r3, [r7, #8]
	led.GPIO_PinConfig.GPIO_PinMode 		=	GPIO_MODE_OUT;
 800073e:	2301      	movs	r3, #1
 8000740:	727b      	strb	r3, [r7, #9]
	led.GPIO_PinConfig.GPIO_PinSpeed 		=	GPIO_SPEED_FAST;
 8000742:	2302      	movs	r3, #2
 8000744:	72bb      	strb	r3, [r7, #10]
	led.GPIO_PinConfig.GPIO_PinOPType		=	GPIO_OP_TYPE_PP;
 8000746:	2300      	movs	r3, #0
 8000748:	733b      	strb	r3, [r7, #12]
	led.GPIO_PinConfig.GPIO_PinPuPdControl	=	GPIO_NO_PUPD;
 800074a:	2300      	movs	r3, #0
 800074c:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 800074e:	2101      	movs	r1, #1
 8000750:	4806      	ldr	r0, [pc, #24]	; (800076c <main+0x3c>)
 8000752:	f7ff fd49 	bl	80001e8 <GPIO_PeriClockControl>
	GPIO_Init(&led);
 8000756:	1d3b      	adds	r3, r7, #4
 8000758:	4618      	mov	r0, r3
 800075a:	f7ff fe2d 	bl	80003b8 <GPIO_Init>
	/* Loop forever */
	while(1)
	{
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_14);
 800075e:	210e      	movs	r1, #14
 8000760:	4802      	ldr	r0, [pc, #8]	; (800076c <main+0x3c>)
 8000762:	f7ff ffbb 	bl	80006dc <GPIO_ToggleOutputPin>
		delay();
 8000766:	f7ff ffcd 	bl	8000704 <delay>
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_14);
 800076a:	e7f8      	b.n	800075e <main+0x2e>
 800076c:	40020c00 	.word	0x40020c00

08000770 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000770:	480d      	ldr	r0, [pc, #52]	; (80007a8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000772:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000774:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8000778:	480c      	ldr	r0, [pc, #48]	; (80007ac <LoopForever+0x6>)
  ldr r1, =_edata
 800077a:	490d      	ldr	r1, [pc, #52]	; (80007b0 <LoopForever+0xa>)
  ldr r2, =_sidata
 800077c:	4a0d      	ldr	r2, [pc, #52]	; (80007b4 <LoopForever+0xe>)
  movs r3, #0
 800077e:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000780:	e002      	b.n	8000788 <LoopCopyDataInit>

08000782 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000782:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000784:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000786:	3304      	adds	r3, #4

08000788 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000788:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800078a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800078c:	d3f9      	bcc.n	8000782 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800078e:	4a0a      	ldr	r2, [pc, #40]	; (80007b8 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000790:	4c0a      	ldr	r4, [pc, #40]	; (80007bc <LoopForever+0x16>)
  movs r3, #0
 8000792:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000794:	e001      	b.n	800079a <LoopFillZerobss>

08000796 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000796:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000798:	3204      	adds	r2, #4

0800079a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800079a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800079c:	d3fb      	bcc.n	8000796 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800079e:	f000 f811 	bl	80007c4 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80007a2:	f7ff ffc5 	bl	8000730 <main>

080007a6 <LoopForever>:

LoopForever:
    b LoopForever
 80007a6:	e7fe      	b.n	80007a6 <LoopForever>
  ldr   r0, =_estack
 80007a8:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 80007ac:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80007b0:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 80007b4:	0800082c 	.word	0x0800082c
  ldr r2, =_sbss
 80007b8:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80007bc:	2000001c 	.word	0x2000001c

080007c0 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80007c0:	e7fe      	b.n	80007c0 <ADC_IRQHandler>
	...

080007c4 <__libc_init_array>:
 80007c4:	b570      	push	{r4, r5, r6, lr}
 80007c6:	4d0d      	ldr	r5, [pc, #52]	; (80007fc <__libc_init_array+0x38>)
 80007c8:	4c0d      	ldr	r4, [pc, #52]	; (8000800 <__libc_init_array+0x3c>)
 80007ca:	1b64      	subs	r4, r4, r5
 80007cc:	10a4      	asrs	r4, r4, #2
 80007ce:	2600      	movs	r6, #0
 80007d0:	42a6      	cmp	r6, r4
 80007d2:	d109      	bne.n	80007e8 <__libc_init_array+0x24>
 80007d4:	4d0b      	ldr	r5, [pc, #44]	; (8000804 <__libc_init_array+0x40>)
 80007d6:	4c0c      	ldr	r4, [pc, #48]	; (8000808 <__libc_init_array+0x44>)
 80007d8:	f000 f818 	bl	800080c <_init>
 80007dc:	1b64      	subs	r4, r4, r5
 80007de:	10a4      	asrs	r4, r4, #2
 80007e0:	2600      	movs	r6, #0
 80007e2:	42a6      	cmp	r6, r4
 80007e4:	d105      	bne.n	80007f2 <__libc_init_array+0x2e>
 80007e6:	bd70      	pop	{r4, r5, r6, pc}
 80007e8:	f855 3b04 	ldr.w	r3, [r5], #4
 80007ec:	4798      	blx	r3
 80007ee:	3601      	adds	r6, #1
 80007f0:	e7ee      	b.n	80007d0 <__libc_init_array+0xc>
 80007f2:	f855 3b04 	ldr.w	r3, [r5], #4
 80007f6:	4798      	blx	r3
 80007f8:	3601      	adds	r6, #1
 80007fa:	e7f2      	b.n	80007e2 <__libc_init_array+0x1e>
 80007fc:	08000824 	.word	0x08000824
 8000800:	08000824 	.word	0x08000824
 8000804:	08000824 	.word	0x08000824
 8000808:	08000828 	.word	0x08000828

0800080c <_init>:
 800080c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800080e:	bf00      	nop
 8000810:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000812:	bc08      	pop	{r3}
 8000814:	469e      	mov	lr, r3
 8000816:	4770      	bx	lr

08000818 <_fini>:
 8000818:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800081a:	bf00      	nop
 800081c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800081e:	bc08      	pop	{r3}
 8000820:	469e      	mov	lr, r3
 8000822:	4770      	bx	lr
